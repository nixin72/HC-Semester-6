@using RAC.BusinessLogic
@using RAC.RACModels
@model RAC.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

@section styles {
    @Styles.Render("~/Styles/register.css")
}

<h2>@ViewBag.Title</h2>
@using (Html.BeginForm("Register", "Account", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
{
    @Html.AntiForgeryToken()
    <h4>Personal Information</h4>
    <hr class='form-divider' />
    @Html.ValidationSummary("", new {@class = "text-danger"})

    <div class='personal-information-container'>
        <div class='first-column'>
            <div class="form-group form-row">
                @Html.LabelFor(m => m.FirstName, new {@class = "register-labels control-label"})
                <div>
                    @Html.TextBoxFor(m => m.FirstName, new {@class = "form-control", tabindex = 1})
                    @Html.ValidationMessageFor(m => m.FirstName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group form-row">
                @Html.LabelFor(m => m.Street, new {@class = "register-labels control-label"})
                <div>
                    @Html.TextBoxFor(m => m.Street, new {@class = "form-control", tabindex = 3})
                </div>
            </div>

            <div class="form-group form-row">
                @Html.LabelFor(m => m.Province, new {@class = "register-labels control-label"})
                <div>
                    @Html.DropDownListFor(m => m.Province, EnumHelper.GetSelectList(typeof(provinces)), new {@class = "form-control", tabindex = 5})
                </div>
            </div>

            <div class="form-group form-row">
                @Html.LabelFor(m => m.HomePhone, new {@class = "register-labels control-label"})
                <div>
                    @Html.TextBoxFor(m => m.HomePhone, new {@class = "form-control", tabindex = 7})
                    @Html.ValidationMessageFor(m => m.HomePhone, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class='second-column'>
            <div class="form-group form-row">
                @Html.LabelFor(m => m.LastName, new {@class = "register-labels control-label"})
                <div>
                    @Html.TextBoxFor(m => m.LastName, new {@class = "form-control", tabindex = 2})
                    @Html.ValidationMessageFor(m => m.LastName, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group form-row">
                @Html.LabelFor(m => m.City, new {@class = "register-labels control-label"})
                <div>
                    @Html.TextBoxFor(m => m.City, new {@class = "form-control", tabindex = 4})
                </div>
            </div>

            <div class="form-group form-row">
                @Html.LabelFor(m => m.Country, new {@class = "register-labels control-label"})
                <div>
                    @Html.TextBoxFor(m => m.Country, new {@class = "form-control", Value = "Canada", tabindex = 6})
                </div>
            </div>
            <div class="form-group form-row">
                @Html.LabelFor(m => m.WorkPhone, new {@class = "register-labels control-label"})
                <div>
                    @Html.TextBoxFor(m => m.WorkPhone, new {@class = "form-control", tabindex = 8})
                    @Html.ValidationMessageFor(m => m.WorkPhone, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
    </div>

    <hr class='form-divider' />
    <h4>Account Information</h4>

    <hr class='form-divider' />
    <div class='account-information-container'>
        <div>
            <div class="first-column form-group form-row">
                @Html.LabelFor(m => m.Email, new {@class = "register-labels control-label"})
                <div>
                    @Html.TextBoxFor(m => m.Email, new {@class = "form-control", tabindex = 9})
                    @{ Html.ValidateFor(m => m.Email); }
                    @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group form-row second-column">
                @Html.LabelFor(m => m.PreferredMethodOfContact, new {@class = "register-labels control-label"})
                <div>
                    @Html.DropDownListFor(m => m.PreferredMethodOfContact, EnumHelper.GetSelectList(typeof(PreferredMethodOfContact)), null, new {@class = "form-control", tabindex = 10})
                    @{ Html.ValidateFor(m => m.PreferredMethodOfContact); }
                    @Html.ValidationMessageFor(m => m.PreferredMethodOfContact, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div>
            <div class="first-column form-group form-row" id='passDiv'>
                @Html.LabelFor(m => m.Password, new {id = "txtPassword", @class = "register-labels control-label"})
                <div>
                    @Html.PasswordFor(m => m.Password, new {@class = "form-control", tabindex = 10})
                    @Html.ValidationMessageFor(m => m.Password, "", new {@class = "text-danger", id = "passErrMsg"})
                </div>
            </div>

            <div class="form-group form-row second-column" style="vertical-align: top">
                @Html.LabelFor(m => m.ConfirmPassword, new {@class = "register-labels control-label"})
                <div>
                    @Html.PasswordFor(m => m.ConfirmPassword, new {@class = "form-control", tabindex = 11})
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div>
            <div class="first-column form-group program-div">
                <p>
                    <label class="control-label register-labels">*Program</label>
                    <div>
                        @{
                            IList<SelectListItem> programs = ProgramBLL.GetProgramsOffered();
                        }
                        @Html.DropDownListFor(model => model.ProgramId, programs, "Choose Program", new {@class = "form-control", tabindex = 12})
                        @Html.ValidationMessageFor(m => m.ProgramId, "", new {@class = "text-danger"})
                    </div>
                </p>
                <div id='genEdDiv'>
                    <div class="checkbox">
                        @* ReSharper disable once Html.IdNotResolved *@
                        <label class='register-labels' for='chbGenEdOnly'>
                            @Html.CheckBoxFor(model => model.GenEdOnly, new {id = "chbGenEdOnly"})
                            General Education Only
                        </label>
                    </div>
                </div>
            </div>

            <div class="captcha-div form-group form-row second-column">
                <label class="control-label register-labels">*Please verify that you are human</label>
                <div class='captcha-container'>
                    @* ReSharper disable once UnknownCssClass *@
                    <div class="form-control-static g-recaptcha" data-sitekey="6Ld1_EEUAAAAAKwCZyen8T6uw06RsoekSVh4GcHw"></div>
                    <div class="text-danger">@ViewBag.CaptchaMessage</div>
                </div>
            </div>
        </div>
    </div>

    <hr class='form-divider' />

    <div class="form-group">
        <div id='privacyPolicyDiv'>
            <div class="checkbox">
                @* ReSharper disable once Html.IdNotResolved *@
                <label class='register-labels' for='chbPrivacyPolicy'>
                    @Html.CheckBoxFor(model => model.GenEdOnly, new {id = "chbPrivacyPolicy"})
                    I have read and accepted the @Html.ActionLink("Privacy Policy", "PrivacyPolicy", "Account", new {target = "_blank"})
                </label>
            </div>
        </div>
        <div>
            <input class="btn btn-default register-button" disabled='disabled' id='btnSubmit' type="submit" value="Register" /> |
            @Html.ActionLink("Return to login", "Login", "Account")
        </div>
    </div>
}
<div id='uri' uri-hasgeneds='@Url.Action("HasGenEds", "Candidate")'></div>

@section scripts {
    @Scripts.Render("~/Scripts/jquery.validate.js")
    @Scripts.Render("~/Scripts/register.js")
    <script src='https://www.google.com/recaptcha/api.js'></script>
}